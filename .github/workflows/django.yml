name: Example CI Django + Postgres Tests

# Controls when the workflow will run
on:
  # Allows you to call this workflow within another workflow
  workflow_call:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  # Triggered based on the git event type
  push:
    branches: [main]
  pull_request:
    branches: [main]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Add in environment variables for the entire "build" job
    env:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_HOST: localhost # default host value for the database
      POSTGRES_DB: djtesting
      POSTGRES_PORT: 5432
      SECRET_KEY: '#p7nnxb7y^yq8ahfw5%$xh=f8=&1y*5+a5($8w_f7kw!-qig(j'
      DJANGO_SETTINGS_MODULE: 'config.settings'
      DEBUG: True
    services:
      postgres_main:
        image: postgres:14
        env:
          POSTGRES_USER: ${{ env.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ env.POSTGRES_DB }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready 
          --health-interval 10s 
          --health-timeout 5s 
          --health-retries 5
    # If you want to test multiple python version(s)
    strategy:
      matrix:
        python-version: ["3.10"]
      # max-parallel: 2
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v3.5.3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r backend/requirements.txt
      - name: Lint with flake8
        run: |
          cd backend
          flake8
      - name: Run migrations and Tests
        # Step specific environment variables
        env:
          DEBUG: "0"
          DJANGO_SECRET_KEY: ${{ env.DJANGO_SECRET_KEY }}
          DATABASE_USER: ${{ env.POSTGRES_USER }}
          DATABASE_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
          DATABASE_HOST: ${{ env.POSTGRES_HOST }}
          DATABASE_NAME: ${{ env.POSTGRES_DB }}
          DATABASE_PORT: ${{ env.POSTGRES_PORT }}
          FRONTEND_URL: 'http://localhost:3000'
        run: |
          python backend/manage.py makemigrations
          python backend/manage.py migrate
          python backend/manage.py test
          

  push-store-image:
    runs-on: ubuntu-latest
    # defaults:
    #   run:
    #     working-directory: './backend'
    steps:
      - name: 'Checkout GitHub Action'
        uses: actions/checkout@main
                
      - name: 'Login to GitHub Container Registry'
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{github.actor}}
          password: ${{secrets.GITHUB_TOKEN}}
                  
      - name: 'Build Inventory Image'
        run: |
          docker build . -f backend/Dockerfile --build-arg REQUIREMENTS_FILE=requirements.txt --tag ghcr.io/deltacodepl/opak-page:latest
          docker push ghcr.io/deltacodepl/opak-page:latest
